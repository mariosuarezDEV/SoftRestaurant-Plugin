ALTER TABLE cheqdet ADD id BIGINT IDENTITY(1,1);

ALTER TABLE cheqdet ADD CONSTRAINT PK_cheqdet_id PRIMARY KEY (id);

ALTER TABLE cheques ADD estado BIT DEFAULT 0;

UPDATE cheques SET estado = 0;

<div class="dropdown col-md-4">
                            <button class="btn btn-warning dropdown-toggle w-100" type="button"
                                    data-bs-toggle="dropdown" aria-expanded="false">
                                Sustituir
                            </button>
                            <ul class="dropdown-menu">
                                <li><a class="dropdown-item" href="#">Sustituir por café con Pan</a></li>
                                <li><a class="dropdown-item" href="#">Sustituir por postre café</a></li>
                                <li><a class="dropdown-item" href="#">Sustituir por café en grano</a></li>
                                <li>
                                    <hr class="dropdown-divider">
                                </li>
                                <li><a class="dropdown-item" href="#">Sustituir por un producto aleatorio</a></li>
                            </ul>
                        </div>


# Obtener los checkbox seleccionados
    if request.method == 'POST':
        print(request.POST)
        cheques_seleccionados = request.POST.getlist('grupo_eliminar')
        print(f'Cheques seleccionados: {cheques_seleccionados}')
        # Obtener las fechas de la session
        fecha_inicio_str = request.session.get('fecha_inicio')
        fecha_fin_str = request.session.get('fecha_fin')
        # Si la fecha de inicio esta disponible pero no la fecha fin
        if fecha_inicio_str and not fecha_fin_str:
            fecha_inicio = timezone.datetime.fromisoformat(fecha_inicio_str)
            for cheque in cheques_seleccionados:
                Cheques.objects.filter(folio=cheque).delete()
                Cheqdet.objects.filter(foliodet=cheque).delete()
            cheques = clean_orm.get_cheques_detalles_fecha_inicio(fecha_inicio)
            return render(request, "ChequesIndex.html",
                          {"correcto": "Cheques eliminados correctamente", "cheques": cheques})
        # Si la fecha de inicio y la fecha fin estan disponibles
        elif fecha_inicio_str and fecha_fin_str:
            fecha_inicio = timezone.datetime.fromisoformat(fecha_inicio_str)
            fecha_fin = timezone.datetime.fromisoformat(fecha_fin_str)
            for cheque in cheques_seleccionados:
                Cheques.objects.filter(folio=cheque).delete()
                Cheqdet.objects.filter(foliodet=cheque).delete()
            cheques = clean_orm.get_cheques_fechas(fecha_inicio, fecha_fin)
            return render(request, "ChequesIndex.html",
                          {"correcto": "Cheques eliminados correctamente", "cheques": cheques})
        else:
            return render(request, "ChequesIndex.html", {"error": "No se ha seleccionado una fecha para eliminar los cheques"}) # Esto debe cambiar
    else:
        # Esta vista no puede ser accesada por un metodo GET, así que redirigir a la vista de cheques
        return redirect('ChequesIndex')


        todas las mesas que tengan descuento -> se sustituye por extra carga de cafe y extra carga de leche


        try:
                cheque_changes = Cheques.objects.get(folio=folio)
                for cheque_change in cheque_changes:
                    # Alteraciones en el cheque
                    cheque_change.cambio = 0
                    cheque_change.descuento = 0
                    cheque_change.usuariodescuento = ""
                    # Obtener la suma de la cantidad de todos los detalles
                    cheque_change.totalarticulos = sum([detalle.cantidad for detalle in Cheqdet.objects.filter(foliodet=folio)])
                    # Obtener la suma de todos los precios de los detalles
                    cheque_change.subtotal = (sum([detalle.precio for detalle in
                                                   Cheqdet.objects.filter(foliodet=folio)])) / Decimal(1.16)
                    cheque_change.total = sum([detalle.precio for detalle in Cheqdet.objects.filter(foliodet=folio)])
                    cheque_change.totalconpropina = cheque_change.total + cheque_change.propina
                    cheque_change.totalimpuesto1 = (sum([detalle.precio for detalle in
                                                         Cheqdet.objects.filter(foliodet=folio)])) / Decimal(1.16) * Decimal(0.16)
                    cheque_change.cargo = 0
                    cheque_change.totalconcargo = cheque_change.total + cheque_change.cargo
                    cheque_change.totalconpropinacargo = cheque_change.total + cheque_change.propina + cheque_change.cargo
                    cheque_change.descuentoimporte = 0
                    cheque_change.efectivo = cheque_change.total
                    cheque_change.tarjeta = 0
                    cheque_change.vales = 0
                    cheque_change.otros = 0

                    cheque_change.totalsindescuento = cheque_change.total
                    cheque_change.totalbebidas = cheque_change.totalbebidas + (p_d.precio * cantidad)
                    cheque_change.totaldescuentos = 0
                    cheque_change.totaldescuentoalimentos = 0
                    cheque_change.totaldescuentobebidas = 0
                    cheque_change.totaldescuentootros = 0

                    cheque_change.totalcortesias = 0
                    cheque_change.totalcortesiaalimentos = 0
                    cheque_change.totalcortesiabebidas = 0
                    cheque_change.totalcortesiaotros = 0
                    cheque_change.totaldescuentoycortesia = 0

                    cheque_change.totalbebidassindescuentos = cheque_change.totalbebidas
                    cheque_change.descuentocriterio = 0
                    cheque_change.descuentomonedero = 0
                    cheque_change.subtotalcondescuento = cheque_change.subtotal

                    cheque_change.save()
                    print(f"Cheque {folio} actualizado correctamente.")
                    return True
            except Exception as e:
                print(f"Error al guardar el cheque: {e}")
                return False